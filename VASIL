# Main workflow of VASIL


report: "report/workflow.rst"


rule_all_common = [
    "results/Daily_SpikeGroups_Freq.csv",
    "results/SpikeGroups.pck",
    "results/Mutation_Profiles.pck",
    "results/epitope_data/dms_per_ab_per_site.csv",
]

if config["all_il"]:
    rule_all_common.append("results/Cross_react_dic_spikegroups_ALL.pck")
    rule_all_common.append(
        "results/Immunological_Landscape_ALL/simulation_status_ALL.csv"
    )


if config["FR_DMS_sites"]:
    rule_all_common.append("results/Fold_Resistance_DMS_Sites_Epitopes.csv")

if config["run_for_lineage_focus"]:
    rule_all_common.append(
        "results/Cross_react_dic_spikegroups_" + config["lineage_focus"] + ".pck"
    )
    rule_all_common.append(
        "results/Immunological_Landscape/simulation_status_"
        + config["lineage_focus"]
        + ".csv"
    ),
    rule_all_common.append("results/Cross_with_delta_validation.pck"),


rule all:
    input:
        rule_all_common,


rule get_mutation_and_spikegroups:
    input:
        covsonar=config["covsonardata"],
    params:
        prefix=config["prefix"],
        mutation_threshold=config["mutation_threshold"],
        date_start=config["date_start"],
        date_end=config["date_end"],
    output:
        dir=directory("results/mutation_data"),
        spk_profiles="results/mutation_data/mutationprofile_RBD_NTD_mutations.csv",
        spike_groups="results/mutation_data/mutationprofile_RBD_NTD_pseudogroups.csv",
    shell:
        "Rscript {workflow.basedir}/scripts/mutationprofile/mutation_profile.R {input.covsonar} {output.dir} {params.prefix} {params.mutation_threshold} {params.date_start} {params.date_end}"


rule get_epitope_landscape:
    input:
        Escape_data=config["escape_data"],
        AB_mapping=config["antibody_mapping"],
    output:
        dir=directory("results/epitope_data"),
        dms_data_regrouped="results/epitope_data/dms_per_ab_per_site.csv",
    shell:
        "Rscript {workflow.basedir}/scripts/epitopelandscape/epitope_landscape.R {input.Escape_data} {input.AB_mapping} {output.dir}"


rule get_lineages_frequencies:
    input:
        cases=config["cases"],
        covsonar=config["covsonardata"],
    params:
        date_start=config["date_start"],
        date_end=config["date_end"],
    output:
        result="results/Daily_Lineages_Freq.csv",
    shell:
        "python {workflow.basedir}/scripts/SpikeGroups_frequencies/Lineages_freqs.py {input.cases} {input.covsonar} {params.date_start} {params.date_end} {output.result}"


rule get_spikegroups_frequencies:
    input:
        lins_freqs="results/Daily_Lineages_Freq.csv",
        spk_profiles="results/mutation_data/mutationprofile_RBD_NTD_mutations.csv",
        spike_groups="results/mutation_data/mutationprofile_RBD_NTD_pseudogroups.csv",
    output:
        spikes_freqs="results/Daily_SpikeGroups_Freq.csv",
        spikes_dic="results/SpikeGroups.pck",
        mutations_dic="results/Mutation_Profiles.pck",
    shell:
        "python {workflow.basedir}/scripts/SpikeGroups_frequencies/SpikeGroups_freqs.py {input.lins_freqs} {input.spk_profiles} {input.spike_groups} {output.spikes_freqs} {output.spikes_dic} {output.mutations_dic}"


if config["run_for_lineage_focus"]:

    rule get_cross_neutralization:
        input:
            spikes_dic="results/SpikeGroups.pck",
            mutations_dic="results/Mutation_Profiles.pck",
            dms_data_regrouped="results/epitope_data/dms_per_ab_per_site.csv",
        params:
            lineage_focus=config["lineage_focus"],
            mutation_focus=config["mutation_focus"],
        output:
            cross_delta="results/Cross_with_delta_validation.pck",
            cross_spk="results/Cross_react_dic_spikegroups_"
            + config["lineage_focus"]
            + ".pck",
        shell:
            "python {workflow.basedir}/scripts/Cross_neutralization/Compute_FR.py {input.spikes_dic} {input.mutations_dic} {input.dms_data_regrouped} {params.lineage_focus} {params.mutation_focus} {output.cross_delta} {output.cross_spk}"

    rule get_Immunological_Landscape:
        input:
            cases=config["cases"],
            cross_delta="results/Cross_with_delta_validation.pck",
            cross_spk="results/Cross_react_dic_spikegroups_"
            + config["lineage_focus"]
            + ".pck",
            spikes_dic="results/SpikeGroups.pck",
            spikes_freqs="results/Daily_SpikeGroups_Freq.csv",
            dms_data_regrouped="results/epitope_data/dms_per_ab_per_site.csv",
            VE_delta=config["VE_delta"],
        params:
            total_pop=config["total_population"],
            date_start=config["date_start"],
            date_end=config["date_end"],
            lineage_focus=config["lineage_focus"],
        output:
            resultdir=directory("results/Immunological_Landscape"),
            results_done="results/Immunological_Landscape/simulation_status_"
            + config["lineage_focus"]
            + ".csv",
        shell:
            "python {workflow.basedir}/scripts/Expected_immunized/Expected_immunized.py {input.cases} {input.cross_delta} {input.cross_spk} {input.spikes_dic} {input.spikes_freqs} {input.dms_data_regrouped} {input.VE_delta} {params.total_pop} {params.date_start} {params.date_end} {params.lineage_focus} {output.resultdir}"


if config["all_il"]:

    rule get_cross_neutralization_all:
        input:
            spikes_dic="results/SpikeGroups.pck",
            mutations_dic="results/Mutation_Profiles.pck",
            dms_data_regrouped="results/epitope_data/dms_per_ab_per_site.csv",
        params:
            lineage_focus="ALL",
            mutation_focus="None",
        output:
            cross_delta="results/Cross_with_delta_validation_recomputed.pck",
            cross_spk="results/Cross_react_dic_spikegroups_ALL.pck",
        shell:
            "python {workflow.basedir}/scripts/Cross_neutralization/Compute_FR.py {input.spikes_dic} {input.mutations_dic} {input.dms_data_regrouped} {params.lineage_focus} {params.mutation_focus} {output.cross_delta} {output.cross_spk}"

    rule get_Immunological_Landscape_all:
        input:
            cases=config["cases"],
            cross_delta="results/Cross_with_delta_validation_recomputed.pck",
            cross_spk="results/Cross_react_dic_spikegroups_ALL.pck",
            spikes_dic="results/SpikeGroups.pck",
            spikes_freqs="results/Daily_SpikeGroups_Freq.csv",
            dms_data_regrouped="results/epitope_data/dms_per_ab_per_site.csv",
            VE_delta=config["VE_delta"],
        params:
            total_pop=config["total_population"],
            date_start=config["date_start"],
            date_end=config["date_end"],
            lineage_focus="ALL",
        output:
            resultdir=directory("results/Immunological_Landscape_ALL"),
            results_done="results/Immunological_Landscape_ALL/simulation_status_ALL.csv",
        shell:
            "python {workflow.basedir}/scripts/Expected_immunized/Expected_immunized.py {input.cases} {input.cross_delta} {input.cross_spk} {input.spikes_dic} {input.spikes_freqs} {input.dms_data_regrouped} {input.VE_delta} {params.total_pop} {params.date_start} {params.date_end} {params.lineage_focus} {output.resultdir}"


if config["FR_DMS_sites"]:

    rule get_FR_DMS_sites:
        input:
            spikes_dic="results/SpikeGroups.pck",
            mutations_dic="results/Mutation_Profiles.pck",
            dms_data_regrouped="results/epitope_data/dms_per_ab_per_site.csv",
        params:
            dms_sites="FR_DMS_sites",
            mutation_focus="None",
        output:
            cross_delta="results/Cross_with_delta_validation_too.pck",
            cross_dms="results/Fold_Resistance_DMS_Sites_Epitopes.csv",
        shell:
            "python {workflow.basedir}/scripts/Cross_neutralization/Compute_FR.py {input.spikes_dic} {input.mutations_dic} {input.dms_data_regrouped} {params.dms_sites} {params.mutation_focus} {output.cross_delta} {output.cross_dms}"
