# Main workflow of VASIL


report: "report/workflow.rst"


rule_all_common = [
    "results/Susceptible_weighted_mean_over_spikegroups_all_PK.csv",
    "plots/absolute/absolute_estimate.pdf",
    "plots/absolute/absolute_estimate.svg",
    "plots/relative/plot_status.csv",
    # "plots/relative/relative_fitness_" + config["lineage_focus"] + ".csv",
    # "plots/relative/relative_fitness_" + config["lineage_focus"] + ".svg",
]
if config["FR_DMS_sites"]:
    rule_all_common.append("plots/FR_sites/foldresistance_DMS_sites_epitopes.pdf")

if config["Cross_ALL"]:
    rule_all_common.append("plots/Cross_spikegroups/Cross_React_AB_A.pdf")


rule all:
    input:
        rule_all_common,


rule get_susceptible_weighted_mean:
    input:
        spikes_dic="results/SpikeGroups.pck",
        spikes_freqs="results/Daily_SpikeGroups_Freq.csv",
    params:
        threshold=config["weight_prop"],
        total_pop=config["total_population"],
        res_dir="results",
    output:
        mean_trend="results/Susceptible_weighted_mean_over_spikegroups_all_PK.csv",
    shell:
        "python {workflow.basedir}/scripts/plotting/Susceptible_weighted_mean.py {input.spikes_dic} {input.spikes_freqs} {params.threshold} {params.total_pop} {params.res_dir}"


rule get_absolute_advantage:
    input:
        cases=config["cases"],
        mean_trend="results/Susceptible_weighted_mean_over_spikegroups_all_PK.csv",
    params:
        color=config["color"],
    output:
        res_dir=directory("plots/absolute"),
        res1="plots/absolute/absolute_estimate.pdf",
        res2="plots/absolute/absolute_estimate.svg",
    shell:
        "python {workflow.basedir}/scripts/plotting/absolute_estimation.py {input.cases} {input.mean_trend} {params.color} {output.res_dir}"


rule get_relative_advantage:
    input:
        ES_lin="results/Immunological_Landscape_ALL/Immunized_SpikeGroup_"
        + config["lineage_focus"]
        + "_all_PK.csv",
        spikes_freqs="results/Daily_SpikeGroups_Freq.csv",
        mean_trend="results/Susceptible_weighted_mean_over_spikegroups_all_PK.csv",
    params:
        threshold=config["weight_prop"],
        lineage_focus=config["lineage_focus"],
    output:
        res_dir=directory("plots/relative"),
        res="plots/relative/plot_status.csv",
        #res1="plots/relative/relative_fitness_"+config["lineage_focus"]+".csv",
        #res2="plots/relative/relative_fitness_"+config["lineage_focus"]+".svg",
    shell:
        "python {workflow.basedir}/scripts/plotting/relative_advantage.py {input.ES_lin} {input.spikes_freqs} {params.threshold} {params.lineage_focus} {input.mean_trend} {output.res_dir}"


if config["FR_DMS_sites"]:

    rule plot_FR_sites:
        input:
            FR_sites="results/Fold_Resistance_DMS_Sites_Epitopes.csv",
        output:
            res_dir=directory("plots/FR_sites"),
            res="plots/FR_sites/foldresistance_DMS_sites_epitopes.pdf",
        shell:
            "Rscript {workflow.basedir}/scripts/plotting/FR_sites_landscape.R {input.FR_sites} {output.res_dir}"


if config["Cross_ALL"]:

    rule plot_cross_all:
        input:
            cross_ALL="results/Cross_react_dic_spikegroups_ALL.pck",
            cross_lin=config["Cross_Lin_file"],
        params:
            lin_name=config["added_lineage"],
        output:
            res_dir=directory("plots/Cross_spikegroups"),
            res="plots/Cross_spikegroups/Cross_React_AB_A.pdf",
        shell:
            "python {workflow.basedir}/scripts/plotting/Cross_maps.py {input.cross_ALL} {params.lin_name} {input.cross_lin} {output.res_dir}"
